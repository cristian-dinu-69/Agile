Objectives
identify how to build strong Agile teams
[Video description begins] Topic Title: Agile Teams. Your host for the session is Colin Calnan. [Video description ends]

In this video, I'll identify how to build strong Agile teams. Despite sharing common values, there's no magic formula for the perfect Agile team. Some teams implement Scrum, some implement Kanban. Agile purists prefer co-located teams, but business realities sometimes mean that distributing a team across geographies is necessary. Most Agile teams possess all the required skills, but sometimes it's necessary to call on specialists for specific work. So how do you know whether your team's built on a solid foundation? Well, it's important to remember that Agile teams are like individuals, that they take time to grow.

And Agile theorists often quote Tuckman's what's called stages of group development, and this means that Agile teams go through four phases as they develop. Forming, this is where a high degree of guidance is needed from a manager, roles are unclear, and processes are not well established. Storming phase, this is where the team's gaining an understanding of how team decisions are made, that the purpose is clear, but that team relationships are still a little blurry. Norming, at this point the relationships are well understood in the team, there's commitment to the goals, and the team are beginning to optimize the process.

And then performing, a team reaches this performing stage where work becomes truly awesome. Members are going to trust each other, they understand one another's strengths, and they use that understanding to optimize how they build their software. Keeping Agile teams intact is going to take some organizational discipline, but it pays to protect the team, within reason of course. When change is introduced, like new hires or employee departure, the team reverts back to the forming stage as it absorbs the change.

So each project methodology has its own unique list of team members. And while the titles may change, there's a few universal characteristics that Agile team members should have. T-shaped, so developing cross skills, and T-shaped people in a team has many benefits for the team and for the organization itself, for the customer, and for the individual. A valuable team member has a wide breadth of basic knowledge about their subject, but also has deep knowledge in one specific area. If they have a diverse skill set, that they know how to use it. They're adaptable, no matter the environment, their output remains consistent. Cross-functional team members have skills outside their traditional areas.

And this helps minimize dependencies between teams, resulting in fewer challenges and coordination with differing priorities. So for example, they might know some basic graphic design or data analysis, or even HTML and CSS. And then as part of optimizing and becoming more efficient, asking the right questions is important and challenging the way things have always been done when it's appropriate. So this kind of curious mindset. They also need to be entrepreneurial. An Agile team member is one that doesn't have to wait to be told what to do. They include multiple skill sets on your Agile team that can often lead to business and digital innovation in unexpected ways.

Team players prioritize the success of the team over their own personal glory. So with cross functional teams, people are rewarded not only for exercising their skills but for the overall success of the project. If the schedule seems impossible or they disagree about a particular approach, rather than just throwing up their hands and going on to another project, they have to find a way to resolve that conflict so that the project moves forward. And then they're committed to excellence. And one of the key benefits of Agile projects is delivering quality work faster. Team members who are committed to excellent won't settle for average. And they're not hung up on perfection, but they're dedicating to producing their best work. Successful collaboration on Agile team relies heavily on three skills.

Feedback, so frequent feedback from stakeholders and end users keeps the development team focused on the goals. And they help to ensure that they deliver high value features. Feedback loops also allow the team to accommodate changes later in the development process. And feedback during iterative development has to increase awareness and foster innovation. So it's essential to provide feedback that contains a clear purpose, is specific and descriptive, and offers possible alternatives.

For all members on an Agile project team, it's important to identify what to start, stop, and continue doing when it comes to their iteration work. It's important for any program, especially Agile programs, to have solid rapport across the team. So personal connection between team members builds trust and minimizes missed expectations, helps with self organization. It also helps to boost morale, so communication is important. Pair programming is one of the core methods of Agile and improve code quality. Agile project management approaches value in a face to face way. So face to face communication is important, and it's one of the best ways to convey information.

Project teams use the show, don't tell concept. And so they show working software to communicate progress on a regular basis in the sprint review. Motivation, so the foundation for motivation has been established when you combine effective feedback with effective communication. So motivation is built on encouragement, partnership, as well as compromise without making concessions that damage trust. Working together to ensure that any barriers or impediments or unrealistic expectations don't derail the team, that brings unity. So when the Agile project manager delegates the responsibility to team members to complete features that they've committed to, they're creating an environment of trust.

By creating this environment, the team can then discover their patterns of working, their comfort zones, and creative spaces. And this ultimately leads to high-performing, self-motivated teams. You can also consult with Agile experts and work with an Agile coach to ensure that your team becomes comfortable with Agile. But there's a number of best practices that you can implement on your own to ensure that your team is doing their best work. Iterative development, so throughout Agile iterative development, bigger projects are broken down into smaller chunks. And continuous tests are done in repetitive cycles.

These are generally referred to as sprints in the Scrum framework. And through these sprints, the teams get a perspective on the new features that need to be added to the final project. Uninterrupted communication is also a key Scrum framework attribute, and it can become a bottleneck if it's not tackled efficiently. One way to ensure seamless communication is to create a strategy with all the essential guidelines for the team. And this can come in handy with remote teams, as it makes those goals transparent. Daily meetings, or short meetings, known as daily Scrum, should be held with the team on a regular basis.

They're typically for a maximum of 15 minutes, keep them short. And practicing these is a great way to monitor the progress of work, and it helps keep everyone in the loop on the project updates. These meetings also help track the team's do's and don'ts of product development. So continuous feedback from team members is also critical in order to understand how the team is going along with the process. And this feedback also helps to identify any hurdles that might be occurring in the development cycle, and then to be able to reflect on what might need improvement.